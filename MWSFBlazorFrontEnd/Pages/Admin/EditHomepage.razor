@page "/admin/edithomepage"
@using AutoMapper
@using MWSFBlazorFrontEnd.Models.FrontPage
@using MWSFDataAccess.DataService.FrontPage

@inject IFrontPageDataService DataService
@inject IMapper Mapper

<h2>Edit homepage</h2>

@if (_showFeedback)
{
    <div class="row" id="indexSettingsFeedback">
        <div class=@($"{_feedbackCss} col-md-5 font-weight-bold")>
            @_feedbackMessage
        </div>
    </div>
}
<div class="row" id="indexSettings">
      <div class="opacity-50-dark p-3 col-md-5">

        <EditForm Model="@_settingsModel" OnSubmit="@HandleOnSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <label class="font-weight-bold my-2">
                Show Logo: &nbsp;
                <RadzenCheckBox @bind-Value="_settingsModel.ShowLogo"></RadzenCheckBox>
            </label> <br />
            <label class="font-weight-bold my-2">
                Headline Text:
                <RadzenTextBox @bind-Value="_settingsModel.Headline"></RadzenTextBox>
            </label><br />
            <label class="font-weight-bold my-2">
                <span class="align-top">Details Text: &nbsp;</span>
                <RadzenTextArea @bind-Value="@_settingsModel.Details" Cols="40"></RadzenTextArea>
            </label><br />
            <label class="font-weight-bold my-2">
                Show Countdown: &nbsp;
                <RadzenCheckBox @bind-Value="@_settingsModel.ShowCountdown"></RadzenCheckBox>
            </label><br />
            @if (_settingsModel.ShowCountdown)
            {
                <label class="font-weight-bold my-2">
                    Countdown Title: &nbsp;
                    <RadzenTextBox @bind-Value="@_settingsModel.CountdownTitle"></RadzenTextBox>
                </label><br />

                <label class="font-weight-bold my-2">
                    Countdown until: &nbsp;
                    <span class="text-dark">
                        <RadzenDatePicker @bind-Value="_settingsModel.CountdownUntil" ShowTime="true" Style="max-width:90%"></RadzenDatePicker>
                    </span>
                </label>
                <button class="btn btn-info" type="button" @onclick="@(() =>
                                                                          {
                                                                              _settingsModel.CountdownUntil = DateTime.Now;
                                                                          })">
                    Now
                </button>
            }

            <span style="display: flex; justify-content: flex-end; width: 100%; padding: 0;">
                <button class="btn btn-primary" type="submit">Save</button>
            </span>
        </EditForm>
    </div>
</div>


@code {
    private DisplayFrontPageSettingsModel _settingsModel = new DisplayFrontPageSettingsModel();
    private bool _showFeedback;
    private string _feedbackMessage;
    private string _feedbackCss;

    protected override async Task OnParametersSetAsync()
    {
        var dbSettings = await DataService.GetNewestFrontPageSettingsModel();

        if (dbSettings != null)
        {
            _settingsModel = Mapper.Map<DisplayFrontPageSettingsModel>(dbSettings);
            if (_settingsModel.CountdownUntil == null || _settingsModel.CountdownUntil == DateTime.MinValue)
            {
                var tz = TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time");
                var centralTime = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, tz);
                _settingsModel.CountdownUntil = centralTime;
            }
        }

        await base.OnParametersSetAsync();
    }

    private async Task HandleOnSubmit()
    {
        _showFeedback = true;
        try
        {
            await DataService.SaveFrontPageSettings(_settingsModel);
            _feedbackCss = "alert-success";
            _feedbackMessage = "Settings saved successfully!";
        }
        catch (Exception e)
        {
            _feedbackCss = "alert-danger";
            _feedbackMessage = $"Could not save Settings:  {e.Message}";
        }
    }
}
